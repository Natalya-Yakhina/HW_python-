# 2. Задание​Формат: На семинаре и в лекциях мы разобрали новые функции, которые позволяют улучшить код прошлых задач.​
# ​Задача: предложить улучшения кода для уже решённых задач(не менее 4 задач нужно улучшить):​
# c помощью использования **лямбд, filter, map, zip, enumerate, list comprehension


# ==============================================  1.  ========================================================
#  1 - Напишите программу, удаляющую из текста все слова, содержащие ""абв"".
# 'абвгдейка - это передача' = >" - это передача"

# import random
# from typing import Counter

# text = 'Напишите абв програбву программу удаляющуабв удаляющую из текста все слова словабв, содержащие абв'

# delete = ' '.join(list(filter(lambda x: not 'абв' in x, text.split(' '))))
# print(delete)

# ==============================================  2.  ========================================================
# 2 - Напишите программу, которая принимает на вход число N и выдает набор произведений (набор - это список) чисел от 1 до N.

# Пример:
# - пусть N = 4, тогда [ 1, 2, 6, 24 ] (1, 1*2, 1*2*3, 1*2*3*4)

# from math import factorial

# N = int(input("Введите число: "))
# f = lambda x: x * factorial(x -1)
# result_list = list( f(i) for i in range(1, N +1))
# print(result_list)

# ==============================================  3.  ========================================================
# 3 - Задайте список из вещественных чисел. Напишите программу, которая найдёт разницу 
# между максимальным и минимальным значением дробной части элементов.

# Пример:
# [1.1, 1.2, 3.1, 5, 10.01] => 0.19

# lst = [1.1, 1.2, 3.1, 5, 10.01]
# # list = list(map(float, input('Введите числа через пробел: ').split()))

# new_lst = list(map((lambda x: x - (x * 10 // 10)), lst))
# print(f'{lst} => {round(max(new_lst) - min(new_lst), 2)}')

# ==============================================  4.  ========================================================
# 4 - Напишите программу, которая принимает на вход вещественное число и показывает сумму его цифр.

# Пример:
# - 6782 -> 23
# - 0,56 -> 11

# num = input("Введите число N = ")

# print(f'Сумма цифр введенного числа {num} = {sum(map(int, str(num)))}')

# ==============================================  5.  ========================================================
# 5 - Задайте список из нескольких чисел. Напишите программу, которая найдёт сумму элементов списка, стоящих на нечётной позиции.
# Пример:
# [2, 3, 5, 9, 3] -> на нечётных позициях элементы 3 и 9, ответ: 12

from unittest import result

spisok = [2, 3, 5, 9, 3]

# result = list(filter(lambda x: x % 2, spisok)) # нечетные элементы

num_poz = [i for i in range(1, len(spisok)) if not i % 2 == 0] # нечетные значения из списка
num_poz = [v for k,v in enumerate(spisok) if not k % 2 == 0] # четные значения ключей из массива
# lst = list(enumerate(spisok)) # чтобы понимать как это работает [(0, 2), (1, 3), (2, 5), (3, 9), (4, 3)]
print('\n', spisok, '-> на нечётных позициях элементы ', num_poz, ', сумма которых =', sum(num_poz))